# This workflow runs once per day and recreates the Flock master, beta, and
# stable branches with the latest history from Flutter.
#
# The Flock branches are reconstituted by taking the most recent history of
# Flutter's branches, and then replaying all of Flock's changes on top.
# This replay is effectively a rebase, but each change is saved in a patch
# file instead of the git log.

on:
  schedule:
    - cron: '0 12 * * *' # Once per day at noon
  workflow_dispatch: # on button click

# Update these variables to fit your custom fork configuration.
env:
  # Expected GitHub repository variables:
  #
  #  - "FLOCK_REPO": The GitHub location of your Flutter fork.
  #                  WARNING: THIS WORKFLOW WILL DESTROY HISTORY IN THIS REPO!!
  FLOCK_REPO: ${{ vars.FLOCK_REPO }}

  # A Personal Access Token (PAT) so that this action can destroy and create
  # history in the `FLOCK_REPO`.
  GITHUB_PAT: ${{ secrets.REPO_WORKFLOW_PAT }}

name: daily-flock-rebase
permissions:
  contents: write

jobs:
  # This job runs for "master", "beta", and "stable" Flock branches.
  rebase-flock-on-flutter:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: 
        config: [master, beta, stable]

    steps:
      - name: Check out the Nest Repository
        uses: actions/checkout@v4

      - name: Assemble Flock
        uses: ./.github/actions/assemble-flock
        with:
          flutter_ref: ${{ matrix.config }}
          token: ${{ secrets.REPO_WORKFLOW_PAT }}
          patches_repo: ${{ secrets.PATCHES_REPO }}
          patches_ref: ${{ secrets.PATCHES_REF }}

      - name: Update Remote Flock Branch, will force push our assembled version (master, beta, stable)
        uses: ./.github/actions/push-flock-repo
        with:
          destination_repo: ${{ env.FLOCK_REPO }}
          destination_branch: ${{ matrix.config }}
